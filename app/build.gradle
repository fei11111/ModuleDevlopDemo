apply plugin: 'com.android.application'
android {
    compileSdkVersion rootProject.ext.android.COMPILE_SDK_VERSION
    buildToolsVersion rootProject.ext.android.BUILD_TOOLS_VERSION

    defaultConfig {
        applicationId "com.fei.moduledevlopdemo"
        minSdkVersion rootProject.ext.android.MIN_SDK_VERSION
        targetSdkVersion rootProject.ext.android.TAR_SDK_VERSION
        versionCode rootProject.ext.android.VERSION_CODE
        versionName rootProject.ext.android.VERSION_NAME

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation rootProject.ext.dependencies.publicImplementation.CONSTRAINTLAYOUT
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    if(!rootProject.ext.android.IS_APPLICATION) {
       rootProject.ext.dependencies.other.each{
           implementation project(it)
       }
    }

}

//project.afterEvaluate {
//    com.android.build.gradle.BaseExtension android = project.extensions.getByName("android")
//
//    //强制统一 compileSdkVersion、 minSdkVersion、targetSdkVersion
//    String compileSdkVersion = android.compileSdkVersion
//    String buildToolsVersion = android.buildToolsVersion
//    int targetSdkVersion = android.defaultConfig.targetSdkVersion.apiLevel
//    int minSdkVersion = android.defaultConfig.minSdkVersion.apiLevel
//    if (compileSdkVersion != rootProject.ext.android.COMPILE_SDK_VERSION) {
//        throw new GradleException("请修改 buildToolsVersion，必须设置为 ${rootProject.ext.android.COMPILE_SDK_VERSION}")
//    }
//    if (buildToolsVersion != rootProject.ext.android.BUILD_TOOLS_VERSION) {
//        throw new GradleException("请修改 buildToolsVersion，必须设置为 ${rootProject.ext.android.BUILD_TOOLS_VERSION}")
//    }
//    if (minSdkVersion != rootProject.ext.android.MIN_SDK_VERSION) {
//        throw new GradleException("请修改 minSdkVersion，必须设置为 ${rootProject.ext.android.MIN_SDK_VERSION}")
//    }
//    if (targetSdkVersion != rootProject.ext.android.TAR_SDK_VERSION) {
//        throw new GradleException("请修改 targetSdkVersion，必须设置为 ${rootProject.ext.android.TAR_SDK_VERSION}")
//    }
//}

//ConfigurationContainer container = project.configurations
//container.all { Configuration conf ->
//    ResolutionStrategy rs = conf.resolutionStrategy
//    rs.force 'com.google.code.findbugs:jsr305:2.0.1'
//    //统一第三方库的版本号
//    rs.eachDependency { details ->
//        def requested = details.requested
//        if (requested.group == "com.android.support") {
//            //强制所有的 com.android.support 库采用固定版本
//            if (requested.name.startsWith("multidex")) {
//                details.useVersion(MULTIDEX_VERSION)
//            } else {
//                details.useVersion(SUPPORT_VERSION)
//            }
//        } else if (requested.group == "com.google.code.gson") {
//            //统一 Gson 库的版本号
//            details.useVersion(GSON_VERSION)
//        } else if (requested.group == "org.jetbrains.kotlin") {
//            //统一内部 kotlin 库的版本
//            details.useVersion(KOTLIN_VERSION)
//        }
//    }
//}